import streamlit as st

st.title("T√≠tulo da aplica√ß√£o")
st.write("Um texto util√ßizando write :heart:")

st.text("um texto utilizando o elemento text")
st.header("Se√ß√£o")

st.subheader("Sub se√ß√£o")
st.header("Segunda se√ß√£o")

st.header("Markdown")
st.markdown("""
# Titula primeiro n√≠vel
## T√≠tulo segundo n√≠vel
- item 1
- item 2            
- item 3

```python
nome = 'Rildo'
print (nome)
```          
""")

st.header("C√ìDIGOS")
st.code("""
nome = 'Rildo'
print (nome)        
""")

st.header("st.text_input")
nome = st.text_input("Digite o seu nome")
st.text(nome)


st.header("st.text_input")
nome = st.text_input("Digite o seu nome: ",
                     key="input_nome",
                     max_chars=15)


if nome:
    st.write(f"Voc√™ digitou o seu: {nome}")
else:
    st.write("Nenhum nome foi digitado! ")

    st.header("st.number_imput")
    numero = st.number_input("Entre com um n√∫mero",
                              key="input_numero",
                              min_value=10,
                              max_value=100,
                              step=20)
    st.write(numero)

st.header("st.date_input")
data  = st.date_input("Entre com uma data:",
                      key="input_data",
                      format="DD/MM/YYYY")
st.text(type(data))
st.text(data.strftime(format="%d/%m/%Y"))
    
### Tem que colocar o key tb.

st.header("st.button")

data = st.date_input("Entre com uma data:",
                      format="DD/MM/YYYY")

nome = st.text_input("Digite seu nome:")


botao = st.button("Clique aqui para cadasrar:",
          key="btn_cadastrar")

if botao:
    st.write("O Bot√£o foi Clicado!")
    st.write(f"Nome: {nome}")
    st.write(f"Data: {data.strftime(format='%d/%m/%Y')}")


st.header("st.selectbox")
cor = st.selectbox("Selecione uma cor:", ["vermelho","azul","verde"])

st.write(cor)

st.header("st.multiselect")
cores = st.multiselect("Selecione as cores",
                        ["vermelho","azul","verde"])

st.write(cores)

st.header("st.radio")

opcao = st.radio("Escolha uma op√ß√£o",
                 ["Masculino", "Feminino", "Outros"],)
st.text(opcao)

## Tem que colocar format data .
st.header("st.checkbox")
st.markdown("""
# Contrat de trabalho
            
Nos termos descritos acima, se voc√™ marcar como aceito,
poder√° realizar o seu cadastro.                     
""")

aceite = st.checkbox("Eu aceito os termos", value=False)
st.text(aceite)

if aceite:
    nome = st.text_input("Digite o seu nome:")
    idade = st.number_input("Digite a sua idade:")
    data = st.date_input("Entre com uma data:")
    st.button("Cadastrar") 

import streamlit as st

    
st.header("Elementos de status")

botao = st.button("Clique para ver o statur")

if botao:
    st.success("Cadastro realizado com sucesso!")
    st.balloons()

import streamlit as st

    
st.header("Elementos de status")

botao = st.button("Clique para ver o statur")

if botao:
    st.success("Cadastro realizado com sucesso!")
    st.snow()

    import streamlit as st
import pandas as pd

#Decorando essa fun√ß√£o @st.cache_data  (Decoreito)
@st.cache_data
def carregar_dados():
    dados = pd.read_csv("acidentes.csv")
    return dados

dados = carregar_dados()

#ele tem um lapis na coluna vc pode editar os dados (st.data_editor)

tabela_dados = st.data_editor(dados)
salvar = st.button("Salvar dados")

 # Com esse comando criou uma planilha chamada dados_alterados, vc pode mexer na atual e 
 # salvar diretamente para outra planilha.   
if salvar:
    tabela_dados.to_csv("dados_alterados.csv", index=False)
    st.success("Dados alterados e gravados com secesso!")

 import streamlit as st
import pandas as pd

#Decorando essa fun√ß√£o @st.cache_data  (Decoreito)
@st.cache_data
def carregar_dados():
    dados = pd.read_csv("acidentes.csv")
    return dados

dados = carregar_dados()

#ele tem um lapis na coluna vc pode editar os dados (st.data_editor)

tabela_dados = st.data_editor(dados)
salvar = st.button("Salvar dados")

 # Com esse comando criou uma planilha chamada dados_alterados, vc pode mexer na atual e 
 # salvar diretamente para outra planilha.   
if salvar:
    tabela_dados.to_csv("dados_alterados.csv", index=False)
    st.success("Dados alterados e gravados com secesso!")
 
 #Agrupamentos de dados, pode tb usar o st.bar_chart para cria uma barras de status.

contagem_municipio = dados["municipio"].value_counts()
st.dataframe(contagem_municipio)

import streamlit as st
import pandas as pd

#Decorando essa fun√ß√£o @st.cache_data  (Decoreito)
@st.cache_data
def carregar_dados():
    dados = pd.read_csv("acidentes.csv")
    return dados

dados = carregar_dados()

#ele tem um lapis na coluna vc pode editar os dados (st.data_editor)

tabela_dados = st.data_editor(dados)
salvar = st.button("Salvar dados")

 # Com esse comando criou uma planilha chamada dados_alterados, vc pode mexer na atual e 
 # salvar diretamente para outra planilha.   
if salvar:
    tabela_dados.to_csv("dados_alterados.csv", index=False)
    st.success("Dados alterados e gravados com secesso!")
 
 #Agrupamentos de dados, pode tb usar o st.bar_chart para cria uma barras de status, mostrar grafico
 # muito bom vc vai escolher se quer ou n√£o o grafico na tela. 

mostrar_grafico = st.toggle("Mostrar gr√°fico")

if mostrar_grafico:
    contagem_municipio = dados["municipio"].value_counts()
    st.bar_chart(contagem_municipio)

import streamlit as st

# Para jogar uma imagem na tela , com width=300 vc vai altera o tamanho e altura  da imagem,
#  vc tb pode colocar som mp3, Youtube tb . 
st.image("imagem.png", width=300)
st.audio("audio.mp3")
st.video("https://ww.youtube.com/watch?v=SYU8tT_WqIY")

import streamlit as st
import pandas as pd

# Para colocar o icon aperta (windows mais ponto)
# Para colocar no centro da tela (Centered), para colocar a tela toda (Wide)

st.set_page_config(
    page_title="Meu sistema Streamlit",
    page_icon="üïπÔ∏è",
    layout="wide")

lateral = st.sidebar
data = lateral.date_input("Selecione a dara")
cidade = lateral.selectbox("Selecione a cidade",
                          ["Belo Horizonte","Rio de Janeiro","Manaus"])


@st.cache_data
def carregar_dados():
    dados = pd.read_csv("acidentes.csv")
    return dados

dados = carregar_dados()

st.title("Dados")
tabela = st.dataframe(dados)

municipio = dados["municipio"].value_counts()
st.bar_chart(municipio)

# Para colocar a cidade na parte de baixou da planilha .

st.subheader("Cidade")
st.write(f"A cidade selecionada foi {cidade}")

import streamlit as st
import pandas as pd

# Para colocar o icon aperta (windows mais ponto)
# Para colocar no centro da tela (Centered), para colocar a tela toda (Wide)

st.set_page_config(
    page_title="Meu sistema Streamlit",
    page_icon="üïπÔ∏è",
    layout="wide")

lateral = st.sidebar
data = lateral.date_input("Selecione a dara")
cidade = lateral.selectbox("Selecione a cidade",
                          ["Belo Horizonte","Rio de Janeiro","Manaus"])


@st.cache_data
def carregar_dados():
    dados = pd.read_csv("acidentes.csv")
    return dados

dados = carregar_dados()

st.title("Dados")

# voc√™ colocando Col isso quer dizer contidade de colunas na tela , vc tb pode dar pocentagem para elas 
# 60% para uma e 40% pocento para outra({0,60, 0,40}) tem que tirar o numero 2 certo.

col1, col2 = st.columns(2)

# Agora vc vai trocar os st por col1 , col2 isso faz vc colocar cada uma ao lado planilha mais pocentagem.

tabela = col1.dataframe(dados)

municipio = dados["municipio"].value_counts()
col2.bar_chart(municipio)

# Para colocar a cidade na parte de baixou da planilha .

st.subheader("Cidade")
st.write(f"A cidade selecionada foi {cidade}")

import streamlit as st
import pandas as pd

# Para colocar o icon aperta (windows mais ponto)
# Para colocar no centro da tela (Centered), para colocar a tela toda (Wide)

st.set_page_config(
    page_title="Meu sistema Streamlit",
    page_icon="üïπÔ∏è",
    layout="wide")

lateral = st.sidebar
data = lateral.date_input("Selecione a dara")
cidade = lateral.selectbox("Selecione a cidade",
                          ["Belo Horizonte","Rio de Janeiro","Manaus"])


@st.cache_data
def carregar_dados():
    dados = pd.read_csv("acidentes.csv")
    return dados

# Tenho que abrir uma se√ß√£o (session_state), ele cria um dicionario na menoria do computador
# Para vc de outra pagima chamar os arquino de outra pagima.

dados = carregar_dados()
st.session_state["dados"] = dados
st.session_state["data"] = data
st.session_state["cidade"] = cidade

st.title("Dados")

# voc√™ colocando Col isso quer dizer contidade de colunas na tela , vc tb pode dar pocentagem para elas 
# 60% para uma e 40% pocento para outra({0,60, 0,40}) tem que tirar o numero 2 certo.

col1, col2 = st.columns(2)

# Agora vc vai trocar os st por col1 , col2 isso faz vc colocar cada uma ao lado planilha mais pocentagem.

tabela = col1.dataframe(dados)

municipio = dados["municipio"].value_counts()
col2.bar_chart(municipio)

# Para colocar a cidade na parte de baixou da planilha .

st.subheader("Cidade")
st.write(f"A cidade selecionada foi {cidade}")

# Vamos crir pagimas e ler dados de uma pagima em outra pagima,
# vc tem que criar uma pasta chamada pages, dentro dela vc vai cria arquivos,
#  dados do sistema .py,dados do cliente.py

import streamlit as st
import pandas as pd
from datetime import date

def gravar_dados(nome,data_nasc,tipo):
    if nome and data_nasc <= date.today():
        st.session_state["sucesso"] = True
    else:
        st.session_state["sucesso"] = False   
    

st.set_page_config(
    page_title="Cadastro de Clientes",
    page_icon="üóÉÔ∏è"
)

st.title("Cadastro de clientes")
st.divider()

nome = st.text_input("Digite o nome do cliente",
                      key="nome_cliente")

dt_nasc = st.date_input("Data nascimento", format="DD/MM/YYYY")

tipo =st.selectbox("Tipo do cliente",
                   ["Pessoa jur√≠dica", "Pessoa f√≠sica"])

btn_cadastrar = st.button("Cadastrar", 
                          on_click=gravar_dados,
                          args=[nome, dt_nasc, tipo])


if btn_cadastrar:
    if st.session_state["sucesso"]:
        st.success("Cliente cadastrado com sucesso!",
                   icon="‚úÖ")
    else:
        st.error("Houve algum problema no cadastro!",
                icon="‚ùå")
